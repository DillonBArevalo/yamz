#!/usr/bin/python
# Testing, testing ...  

import os, sys, optparse
import json, psycopg2 as pqdb
import seaice



## Establish connection to PostgreSQL db ##

try:

  try: 
    config = seaice.get_config()
  except OSError: 
    print >>sys.stderr, "error: config file '%s' not found" % options.config_file
    sys.exit(1)

  sea = seaice.SeaIceConnector(config.get('default', 'user'),       
                               config.get('default', 'password'),
                               config.get('default', 'dbname'))
  sea = seaice.SeaIceConnector()

  #term_id_pool = seaice.IdPool(sea, "Terms")
#  cur = sea.con.cursor()
#  cur.execute("""insert into SI.Users (id, first_name, last_name, email, authority, auth_id) 
#                    values (1003, 'Jesus', 'Christus', 'fella', 'your mother', '42')""")
#  sea.updateUserReputation(1003, 10)
#  cur.execute("""insert into SI.Users (id, first_name, last_name, email, authority, auth_id) 
#                    values (1004, 'Jim', 'Brewer', 'guy', 'your mother', '42')""")
#  sea.updateUserReputation(1004, 25)
#  cur.execute("""insert into SI.Users (id, first_name, last_name, email, authority, auth_id) 
#                    values (1005, 'Tony', 'Wong', 'es ok', 'your mother', '42')""")
#  sea.updateUserReputation(1005, 10)
#  sea.updateUserReputation(1001, 10)
#  sea.updateUserReputation(1002, 90)
  for id in map(lambda term: term['id'], sea.getAllTerms()):
    print "#%d is classified as %s" % (id, sea.classifyTerm(id))
#  sea.commit()
  
  #(U, D) = sea.preScore(1004)
  #print sea.postScore(U, D)

except pqdb.DatabaseError, e:
  print 'error: %s' % e    
  sys.exit(1)
